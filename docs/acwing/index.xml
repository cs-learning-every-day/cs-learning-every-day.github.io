<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Day Day Up</title><link>https://cs-learning-every-day.github.io/docs/acwing/</link><description>Recent content on Day Day Up</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://cs-learning-every-day.github.io/docs/acwing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://cs-learning-every-day.github.io/docs/acwing/basic/786/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cs-learning-every-day.github.io/docs/acwing/basic/786/</guid><description>
#include &amp;lt;iostream&amp;gt; using namespace std; int q[100001]; int quick_sort(int l, int r, int k) { if (l == r) { return q[l]; } int x = q[l], i = l - 1, j = r + 1; while (i &amp;lt; j) { while (q[++i] &amp;lt; x); while (q[--j] &amp;gt; x); if (i &amp;lt; j) { swap(q[i], q[j]); } } int sl = j - l + 1; if (k &amp;lt;= sl) return quick_sort(l, j, k); return quick_sort(j + 1, r, k - sl); } int main() { int n, k; cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; k; for (int i = 0; i &amp;lt; n; i++) { cin &amp;gt;&amp;gt; q[i]; } cout &amp;lt;&amp;lt; quick_sort(0, n - 1, k); return 0; }</description></item><item><title/><link>https://cs-learning-every-day.github.io/docs/acwing/basic/791/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cs-learning-every-day.github.io/docs/acwing/basic/791/</guid><description>#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt; using namespace std; const int N = 1e6 + 10; vecotr&amp;lt;int&amp;gt; add(vecotr&amp;lt;int&amp;gt; &amp;amp;A, vecotr&amp;lt;int&amp;gt; &amp;amp;B) { vector&amp;lt;int&amp;gt; C; int t = 0; for (int i = 0; i &amp;lt; A.size() || i &amp;lt; B.size(); i++) { if (i &amp;lt; A.size()) { t += A[i]; } if (i &amp;lt; B.size()) { t += B[i]; } C.push_back(t % 10); t /= 10; } if (t) { C.push_back(1); } return C; } int main() { string a, b; vecotr&amp;lt;int&amp;gt; A, B; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b; // a = &amp;#34;123456&amp;#34; for (int i = a.</description></item><item><title/><link>https://cs-learning-every-day.github.io/docs/acwing/basic/792/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cs-learning-every-day.github.io/docs/acwing/basic/792/</guid><description>两个正整数相减 A - B 考虑A &amp;lt; 0, B &amp;lt; 0 &amp;ndash;&amp;gt; A - B = -(|A| + |B|) 考虑A &amp;gt; 0, B &amp;lt; 0 &amp;ndash;&amp;gt; A - B = |A| + |B|
#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt; using namespace std; // 判断A&amp;gt;=B bool cmp(vecotr&amp;lt;int&amp;gt; &amp;amp;A, vecotr&amp;lt;int&amp;gt; &amp;amp;B) { if (A.size() != B.size()) { return A.size() &amp;gt; B.size(); } for (int i = A.size() - 1; i &amp;gt;= 0; i--) { if (A[i] !</description></item><item><title/><link>https://cs-learning-every-day.github.io/docs/acwing/basic/793/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cs-learning-every-day.github.io/docs/acwing/basic/793/</guid><description>两个正整数相乘 大*小
#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt; using namespace std; vecotr&amp;lt;int&amp;gt; mul(vecotr&amp;lt;int&amp;gt; &amp;amp;A, int b) { vecotr&amp;lt;int&amp;gt; C; int t = 0; for (int i = 0; i &amp;lt; A.size() || t != 0; i++) { if (i &amp;lt; A.size()) { t += A[i] * b; } C.push_back(t % 10); t /= 10; } return C; } int main() { string a; int b; vecotr&amp;lt;int&amp;gt; A; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b; // a = &amp;#34;123456&amp;#34; for (int i = a.</description></item><item><title/><link>https://cs-learning-every-day.github.io/docs/acwing/basic/794/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cs-learning-every-day.github.io/docs/acwing/basic/794/</guid><description>两个正整数相除 大/小
#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt; using namespace std; vecotr&amp;lt;int&amp;gt; mul(vecotr&amp;lt;int&amp;gt; &amp;amp;A, int b, int &amp;amp;r) { vecotr&amp;lt;int&amp;gt; C; int t = 0; r = 0; for (int i = A.size(); i &amp;gt;= 0; i--) { r = r * 10 + A[i]; C.push_back(r / b); r = r % b; } reverse(C.begin(), C.end()); while (C.size() &amp;gt; 1 &amp;amp;&amp;amp; C.back() == 0) { C.pop_back(); } return C; } int main() { string a; int b; vecotr&amp;lt;int&amp;gt; A; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b; // a = &amp;#34;123456&amp;#34; for (int i = a.</description></item></channel></rss>